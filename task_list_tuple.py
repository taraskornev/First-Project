# 5.Виведіть всі елементи списку з парними індексами. Вводиться список чисел. Всі числа списку знаходяться на одному рядку.

# 6. изначте, скільки різних слів у введеному рядку.

# Вхідні дані:

# New Delhi New York Paris Prague Reykjavik
# Happy New Year Happy New Year May we all have a vision now and then Of a world where every neighbor is a friend
# Вихідні дані:

# 6
# 19

# text = "New Delhi New York Paris Prague Reykjavik"
# text = text.split()
# new_text = []
# for word in text:
#     # print(word)
#     if word not in new_text:
#         new_text.append(word)
# print(len(new_text))

# text = "New Delhi New York Paris Prague Reykjavik"
# text = text.split()
# result = 0
# for word_i in range(len(text)):
#     if word_i < len(text) - 1
#         for i in range(len(text)):
#             if text[word_i] == text[word_i = 1] 


# for word_i in range(len(text)):
#     print(word_i)





# 7. Напишіть програму, яка приймає послідовність чисел, розділених комами, від користувача і створює список і кортеж з цими числами.

# Вхідні дані:

# 7, 9, 12, 4
# Вихідні дані:

# [7, 9, 12, 4]
# (7, 9, 12, 4)
# 8. Напишіть програму для отримання частини рядка URL, що позначає назву ресурсу.

# Вхідні дані:

# https://www.namesite.com/folder/index.html
# Вихідні дані:

# index.html
# Middle level

# 9. Для введеної послідовності унікальних цілих чисел, поміняйте місцями мінімальний та максимальний елементи цієї послідовності. Надрукуйте отриманий список.

# 10. Напишіть програму, яка приймає послідовність рядків (порожній рядок для завершення програми) як вхідний рядок і друкує рядки у верхньому регістрі.

# Вхідні дані:

# python
# ruby
# go

# Вихідні дані:

# PYTHON
# RUBY
# GO
# 11. У введеному списку цілих чисел, знайдіть і надрукуйте сусідні елементи, які мають однаковий знак. Якщо такої пари немає, не повинно нічого виводитися.

# Вхідні дані:

# 1 -2 -3 5 6 -3 7 8
# Вихідні дані:

# -2 -3
# 5 6
# 7 8

# numbers = [1, -2, -3, 5, 6, -3, 7, 8]
# for i in range(len(numbers) - 1):
#     if numbers[i] * numbers[i + 1] > 0:
#         print(numbers[i], numbers[i + 1])









# Напишіть програму для обчислення добутку цілих чисел (без використання циклу for), які вводяться через пропуск користувачем в одному рядку.

# Вхідні дані:

# 2 5 3
# Вихідні дані:

# 30
# Напишіть програму для друку елементів певного цілочисельного списку після видалення з нього парних чисел. Значення списку вводяться через пропуск в одному рядку.

# Вхідні дані:

# 3 44 6 8 9 12 7
# Вихідні дані:

# [3, 9, 7]
# Напишіть програму, яка приймає послідовність 4-цифрових двійкових чисел, розділених комами, і друкує числа, які ділиться на 5 без остачі, в рядку і розділені комами.

# Вхідні дані:

# 0100,0011,1010,1001,1100
# Вихідні дані:

# 1010
# Ви вирішили написати перетворювач коду на Python в код на Java. Так як на Java прийнятий стандарт найменування CamelCase, то ви вирішили навчитися перетворювати імена з underscore в цей формат. Стиль underscore характеризується тим, що слова в імені пишуться маленькими літерами і розділяються між собою символом підкреслення _. Стиль CamelCase означає, що кожне слово пишеться з великої літери і роздільників між словами немає. Отже, вводиться один рядок, що містить ім’я, записане в форматі underscore. Програма виводить рядок, що містить ім’я в форматі CamelCase.

# Вхідні дані:

# my_class
# c
# Вихідні дані:

# MyClass
# C
# Напишіть програму для видалення кожного третього елемента із цілочисельного списку і друку результуючого списку, доки список не стане порожнім. Початковий список цілих чисел вводиться в одному рядку через пропуск.

# Вхідні дані:

# 2 5 8 9 4 78 7 1
# Вихідні дані:

# [2, 5, 9, 4, 78, 7, 1]
# [2, 5, 4, 78, 7, 1]
# [2, 5, 78, 7, 1]
# [2, 5, 7, 1]
# [2, 5, 1]
# [2, 5]
# [5]
# []
# Користувач вводить два цілих додатних числа n і m. Напишіть програму, яка створює двовимірний масив розміром n x m і заповнює його символами . і * у шаховому порядку (як у вихідних даних). Лівий верхній кут повинен мати символ ..

# Вхідні дані:

# 6 8
# Вихідні дані:

# . * . * . * . *
# * . * . * . * .
# . * . * . * . *
# * . * . * . * .
# . * . * . * . *
# * . * . * . * .
# Hard level

# У рядку через кому перераховані слова. Сформувати з цих слів новий рядок. Слова мають бути відсортовані за спаданням (від Z до A) без урахування регістру і записані через пропуск.

# Вхідні дані:

# horse, cat, parrot, goldfish, dog
# Вихідні дані:

# parrot horse goldfish dog cat
# Напишіть програму, яка виводить частину послідовності 1 2 2 3 3 3 4 4 4 4 5 5 5 5 5... (число повторюється стільки разів, чому дорівнює). На вхід програми передається невід’ємне ціле число n - стільки елементів послідовності повинна надрукувати програма. На виході очікується послідовність чисел, записаних через пропуск в один рядок.

# Вхідні дані:

# 8
# Вихідні дані:

# 1 2 2 3 3 3 4 4
# Використовуючи поняття списку, напишіть програму, яка створює 3D масив елементів a x b x c, кожен з яких має значення 0. Значення a, b, c вводяться в одному рядку через пропуск.

# Вхідні дані:

# 2 3 3
# 4 4 4
# Вихідні дані:

# [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]]
# [[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]]


# 18. У рядку через кому перераховані слова. Сформувати з цих слів новий рядок. Слова мають бути відсортовані за спаданням (від Z до A) без урахування регістру і записані через пропуск.
# horse, cat, parrot, goldfish, dog

text = "horse, cat, parrot, Goldfish, dog"

text_list = text.split(", ")
text_list.sort(key = str.lower, reverse = True)

print(" ".join(text_list))